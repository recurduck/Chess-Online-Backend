{"version":3,"sources":["pages/Home.jsx","services/httpService.js","services/boards-service.js","cmps/BoardsPreview.jsx","services/board-service.js","services/socketService.js","services/user-service.js","store/actions/userActions.js","cmps/LoginModal.jsx","routes.js","pages/Gamerooms.jsx","pages/Gameroom.jsx","pages/Login.jsx","pages/Member.jsx","pages/Admin.jsx","cmps/Navbar.jsx","cmps/Header.jsx","App.jsx","reportWebVitals.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["Home","className","to","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","boardsService","query","addBoard","player1","deleteBoard","boardId","getBoardById","onMovePiece","gameId","fromCoord","toCoord","frontBoard","addPlayerToGame","playerId","KIT","KING_WHITE","QUEEN_WHITE","ROOK_WHITE","BISHOP_WHITE","KNIGHT_WHITE","PAWN_WHITE","KING_BLACK","QUEEN_BLACK","ROOK_BLACK","BISHOP_BLACK","KNIGHT_BLACK","PAWN_BLACK","BoardsPreview","useState","boards","setBoards","history","useHistory","user","useSelector","state","userModule","fetchBoards","fetchedBoards","onCreateNewGame","loggedInUser","_id","username","newBoard","push","onAddPlayerToGame","getBoardOptions","board","whitePlayer","blackPlayer","onClick","map","gSelectedCell","boardService","cellClicked","cellI","cellJ","game","userId","gameBoard","whiteTurn","cellCoord","i","j","isMarked","_cleanBoard","_isEmptyCell","isSelected","possibleCoords","piece","_getAllPossibleCoordsRook","_getAllPossibleCoordsBishop","_getAllPossibleCoordsKnight","_getAllPossibleCoordsPawn","_getAllPossibleCoordsQueen","_getAllPossibleCoordsKing","_getAllPossibleCoords","coords","forEach","coord","markCells","filter","nextStepBoard","JSON","parse","stringify","newWhiteKingPos","kingPos","newBlackKingPos","_isPawnAQueen","isWhite","undefined","_isCheck","_nextStepModal","onReset","localStorage","clear","reload","pieceCoord","against","threatningPieces","_kingIsAround","_pawnIsAround","length","posCoord","_isWhitePiece","pawnCoord","currPawn","find","obj","aroundCoord","diff","nextCoord","diago1Coord","diago2Coord","_isEnPassant","diagoCoord","lastMove","Math","abs","_getDirection","idx","diagonals","concat","_getPossibleCasteling","kingMoved","socketService","socket","setup","io","reconnection","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","userService","login","logout","signup","getUsers","getById","remove","update","getLoggedinUser","increaseGame","_saveLocalUser","isWin","by","game_played","win","lose","draw","score","userCred","sessionStorage","setItem","getItem","userCreds","dispatch","type","refresh","LoginModal","password","setUser","firstName","lastName","email","registerUser","setRegisterUser","useDispatch","doLogin","ev","preventDefault","goBack","err","doRegister","onSubmit","src","alt","id","placeholder","value","onChange","target","required","htmlFor","name","routes","path","component","useParams","roomId","setGame","setBoard","fetchGame","onLeavingGame","useEffect","updateSocketBoard","onEndGame","socketSetup","bool","_game","mBoard","_board","updateGameBoard","joined","Date","active","last_online","followers","toDateString","game_history","gameNote","time","gameNum","Navbar","dispach","onLogout","Header","el","App","route","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","users","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6791e88.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <div className='hero flex column justify-center align-center'>\r\n      <Link to=\"/gamerooms\"><h1>Welcome to Chess online</h1></Link>\r\n\r\n    </div>\r\n  )\r\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : 'http://localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}\\n ${BASE_URL}${endpoint}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","// import axios from 'axios' for Server\r\n\r\n// const BASE_URL = process.env.NODE_ENV === 'production' ? '/api/board' : 'http://localhost:3030/api/board' //for Server\r\n\r\n// function query() {\r\n//   return axios.get(BASE_URL).then(res => res.data)\r\n// } //for server\r\n\r\n// import { utilService } from \"./util-service.js\";\r\nimport { httpService } from \"./httpService.js\";\r\nconst KIT = {\r\n  KING_WHITE: '♔',\r\n  QUEEN_WHITE: '♕',\r\n  ROOK_WHITE: '♖',\r\n  BISHOP_WHITE: '♗',\r\n  KNIGHT_WHITE: '♘',\r\n  PAWN_WHITE: '♙',\r\n  KING_BLACK: '♚',\r\n  QUEEN_BLACK: '♛',\r\n  ROOK_BLACK: '♜',\r\n  BISHOP_BLACK: '♝',\r\n  KNIGHT_BLACK: '♞',\r\n  PAWN_BLACK: '♟'\r\n}\r\n\r\nexport const boardsService = {\r\n  query,\r\n  addBoard,\r\n  deleteBoard,\r\n  getBoardById,\r\n  onMovePiece,\r\n  addPlayerToGame,\r\n  KIT\r\n}\r\n\r\nfunction query(/*filterBy*/) {\r\n  // if (filterBy) {\r\n  //   var { vendor, maxSpeed, minSpeed } = filterBy\r\n  //   maxSpeed = maxSpeed ? maxSpeed : Infinity\r\n  //   minSpeed = minSpeed ? minSpeed : 0\r\n  //   const filteredCars = gBoards.filter(car => {\r\n  //     return car.vendor.includes(vendor) && car.speed > minSpeed && car.speed < maxSpeed\r\n  //   })\r\n  //   return Promise.resolve(filteredCars)\r\n  // }\r\n  return httpService.get(`board`)\r\n}\r\n\r\nfunction deleteBoard(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nfunction addBoard(player1, player2 = null) {\r\n  return httpService.post('board', player1)\r\n}\r\n\r\nfunction getBoardById(boardId) {  \r\n  return httpService.get(`board/${boardId}`)\r\n}\r\n\r\nfunction addPlayerToGame(boardId, playerId) {\r\n  return httpService.put(`board/${boardId}/${playerId}`, {boardId,playerId})  \r\n}\r\n// function updateBoard(boardId, key, value) {\r\n//   var board = gBoards.find(board => board._id === boardId)\r\n//   board[key] = JSON.parse(JSON.stringify(value));\r\n//   _saveBoardsToStorage();\r\n// }\r\n\r\nfunction onMovePiece(gameId, fromCoord, toCoord, frontBoard) {\r\n  // let game = getBoardById(gameId)\r\n  // if (_validateBoard(frontBoard, game.gameBoard)) {\r\n    // update the MODEL\r\n    // _movePiece(gameId, fromCoord, toCoord)\r\n  // }\r\n  return httpService.put(`board/${gameId}`, {gameId, fromCoord, toCoord, frontBoard})\r\n  // return getBoardById(gameId)\r\n}","import { boardsService } from \"../services/boards-service\"\r\n\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useState } from \"react\"\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const BoardsPreview = () => {\r\n  const [boards, setBoards] = useState(null)\r\n  const history = useHistory()\r\n  let user = useSelector(state => state.userModule)\r\n\r\n  const fetchBoards = async () => {\r\n    const fetchedBoards = await boardsService.query()\r\n    setBoards(fetchedBoards)\r\n  }\r\n  const reset = () => {\r\n    fetchBoards();\r\n  }\r\n\r\n  const onCreateNewGame = async () => {\r\n    let { _id, username } = user.loggedInUser\r\n    let newBoard = await boardsService.addBoard({ _id, username, })\r\n    history.push(`/gamerooms/${newBoard._id}`)\r\n  }\r\n\r\n  const onAddPlayerToGame = async (boardId) => {\r\n    if (user.loggedInUser) {\r\n      let { _id } = user.loggedInUser\r\n      await boardsService.addPlayerToGame(boardId, _id)\r\n      // socketService.emit('update-board', updatedGameBoard)\r\n      // console.log('updatedGameBoard',updatedGameBoard)\r\n\r\n    }\r\n    history.push(`/gamerooms/${boardId}`)\r\n  }\r\n\r\n  const getBoardOptions = (board) => {\r\n    if (user.loggedInUser && (board.whitePlayer.user._id === user.loggedInUser._id || (board.blackPlayer.user && board.blackPlayer.user._id === user.loggedInUser._id)))\r\n      return 'back'\r\n    else if (board.blackPlayer.user)\r\n      return 'Watch'\r\n    else return 'Join'\r\n  }\r\n  if (!boards) {\r\n    reset()\r\n    return <div>loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user.loggedInUser && <button className=\"new-game-btn\" onClick={() => onCreateNewGame()}>New Game</button>}\r\n      <table className=\"boards-list\">\r\n        <thead>\r\n          <tr>\r\n            <th>Room ID</th>\r\n            <th>Player 1</th>\r\n            <th>Player 2</th>\r\n            <th>Players</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {boards.map(board =>\r\n            <tr key={board._id}>\r\n              <td>{board._id}</td>\r\n              <td>{board.whitePlayer.user.username}</td>\r\n              <td>{board.blackPlayer.user ? board.blackPlayer.user.username : 'pending'}</td>\r\n              <td>{board.blackPlayer.user ? '2' : '1'}/2</td>\r\n              {/* <td><Link to={`/gamerooms/${board._id}`} onClick={() => onAddPlayerToGame(board._id)}> */}\r\n              <td>\r\n                <button onClick={() => onAddPlayerToGame(board._id)}>{getBoardOptions(board)}</button>\r\n              </td>\r\n            </tr>)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\n","// import axios from 'axios' for Server\r\n\r\n// const BASE_URL = process.env.NODE_ENV === 'production' ? '/api/board' : 'http://localhost:3030/api/board' //for Server\r\n\r\n// function query() {\r\n//   return axios.get(BASE_URL).then(res => res.data)\r\n// } //for server\r\n\r\n// import { utilService } from \"./util-service.js\";\r\n// import { storageService } from \"./storage-service.js\";\r\nimport { boardsService } from \"./boards-service.js\"\r\n\r\nconst KIT = boardsService.KIT\r\nlet gSelectedCell = null;\r\n\r\n\r\n\r\nexport const boardService = {\r\n  cellClicked,\r\n  onReset\r\n}\r\n\r\nfunction onReset() {\r\n  localStorage.clear()\r\n  window.location.reload()\r\n}\r\n\r\nfunction cellClicked(cellI, cellJ, game, userId) {\r\n  let board = game.gameBoard\r\n  if (userId === (game.whiteTurn ? game.whitePlayer.user._id : game.blackPlayer.user._id)) {\r\n    // if the target is marked - move the piece!\r\n    const cellCoord = { i: cellI, j: cellJ };\r\n    if (board[cellI][cellJ].isMarked) {\r\n      game = boardsService.onMovePiece(game._id, gSelectedCell, cellCoord, board)\r\n      _cleanBoard(board);\r\n      return game;\r\n    }\r\n    if (_isEmptyCell(cellCoord, board)) return\r\n    _cleanBoard(board);\r\n    board[cellI][cellJ].isSelected = true\r\n    gSelectedCell = cellCoord;\r\n    const { piece } = board[cellI][cellJ];\r\n    let possibleCoords = _getAllPossibleCoords(piece, cellCoord, game);\r\n    possibleCoords = possibleCoords.filter(toCoord => !_nextStepModal(cellCoord, toCoord, game))\r\n    markCells(possibleCoords, board);\r\n    return game;\r\n  }\r\n}\r\n\r\nfunction markCells(coords, board) {\r\n  coords.forEach(coord => {\r\n    board[coord.i][coord.j].isMarked = true\r\n  });\r\n}\r\n\r\n//return false if in the next step the king is still checked\r\nfunction _nextStepModal(fromCoord, toCoord, game) {\r\n  let nextStepBoard = JSON.parse(JSON.stringify(game.gameBoard))\r\n  let piece = nextStepBoard[fromCoord.i][fromCoord.j].piece;\r\n  let newWhiteKingPos = game.whitePlayer.kingPos;\r\n  let newBlackKingPos = game.blackPlayer.kingPos;\r\n  // update the NEXT STEP MODEL\r\n  nextStepBoard[fromCoord.i][fromCoord.j].piece = '';\r\n  nextStepBoard[toCoord.i][toCoord.j].piece = _isPawnAQueen(toCoord, piece);\r\n  nextStepBoard[toCoord.i][toCoord.j].isWhite = nextStepBoard[fromCoord.i][fromCoord.j].isWhite;\r\n  nextStepBoard[fromCoord.i][fromCoord.j].isWhite = undefined\r\n  if (piece === KIT.KING_WHITE) newWhiteKingPos = { i: toCoord.i, j: toCoord.j }\r\n  else if (piece === KIT.KING_BLACK) newBlackKingPos = { i: toCoord.i, j: toCoord.j }\r\n  return _isCheck(!game.whiteTurn ? newBlackKingPos : newWhiteKingPos, game.whiteTurn, nextStepBoard, game)\r\n}\r\n\r\n\r\nfunction _isCheck(pieceCoord, against, board, game) {\r\n  let threatningPieces = []\r\n  if (_kingIsAround(pieceCoord, against, board)) threatningPieces.push(..._kingIsAround(pieceCoord, against, board))\r\n  if (_pawnIsAround(pieceCoord, against, board, game)) threatningPieces.push(..._pawnIsAround(pieceCoord, against, board, game));\r\n  let res = _getAllPossibleCoordsRook(pieceCoord, board, game.whiteTurn)\r\n  for (let i = 0; i < res.length; i++) {\r\n    let posCoord = { i: res[i].i, j: res[i].j }\r\n    let piece = board[posCoord.i][posCoord.j].piece\r\n    if ((piece === KIT.ROOK_BLACK || piece === KIT.ROOK_WHITE ||\r\n      piece === KIT.QUEEN_BLACK || piece === KIT.QUEEN_WHITE) && !_isWhitePiece(posCoord, board) === against) {\r\n      threatningPieces.push(posCoord);\r\n    }\r\n  }\r\n  res = _getAllPossibleCoordsBishop(pieceCoord, board, game.whiteTurn)\r\n  for (let i = 0; i < res.length; i++) {\r\n    let posCoord = { i: res[i].i, j: res[i].j }\r\n    let piece = board[posCoord.i][posCoord.j].piece\r\n    if ((piece === KIT.BISHOP_BLACK || piece === KIT.BISHOP_WHITE ||\r\n      piece === KIT.QUEEN_BLACK || piece === KIT.QUEEN_WHITE) && !_isWhitePiece(posCoord, board) === against) {\r\n      threatningPieces.push(posCoord);\r\n    }\r\n  }\r\n  res = _getAllPossibleCoordsKnight(pieceCoord, board, game.whiteTurn)\r\n  for (let i = 0; i < res.length; i++) {\r\n    let posCoord = { i: res[i].i, j: res[i].j }\r\n    let piece = board[posCoord.i][posCoord.j].piece\r\n    if ((piece === KIT.KNIGHT_BLACK || piece === KIT.KNIGHT_WHITE) && !_isWhitePiece(posCoord, board) === against) {\r\n      threatningPieces.push(posCoord);\r\n    }\r\n  }\r\n  return (threatningPieces.length) ? threatningPieces : false\r\n}\r\n\r\nfunction _pawnIsAround(coord, against, board, game) {\r\n  let res = []\r\n  let pawnCoord = { i: (against) ? coord.i - 1 : coord.i + 1, j: coord.j };\r\n  if (against === game.whiteTurn) {\r\n    for (let j = - 1; j <= 1; j++) {\r\n      let currPawn = { i: pawnCoord.i, j: pawnCoord.j + j }\r\n      if ((currPawn.j < 8 && currPawn.j >= 0) && !_isEmptyCell(currPawn, board) && ((board[currPawn.i][currPawn.j].piece === (!against ? KIT.PAWN_WHITE : KIT.PAWN_BLACK)))) {\r\n        let option = [..._getAllPossibleCoordsPawn(currPawn, !against, board, game)].find(obj => obj.i === coord.i && obj.j === coord.j);\r\n        if (option) res.push(currPawn)\r\n      }\r\n    }\r\n  } else {\r\n    if (coord.i < 1 || coord.i > 6) return false\r\n    if (pawnCoord.j > 0)\r\n      if (board[pawnCoord.i][pawnCoord.j - 1].piece === ((against) ? KIT.PAWN_BLACK : KIT.PAWN_WHITE)) res.push({ i: pawnCoord.i, j: pawnCoord.j - 1 })\r\n    if (pawnCoord.j < 7)\r\n      if (board[pawnCoord.i][pawnCoord.j + 1].piece === ((against) ? KIT.PAWN_BLACK : KIT.PAWN_WHITE)) res.push({ i: pawnCoord.i, j: pawnCoord.j + 1 })\r\n  }\r\n  return res.length ? res : false;\r\n}\r\n\r\n\r\nfunction _kingIsAround(coord, against, board) {\r\n  let res = []\r\n  for (let i = coord.i - 1; i <= coord.i + 1; i++) {\r\n    if (i < 0 || i >= 8) continue;\r\n    for (let j = coord.j - 1; j <= coord.j + 1; j++) {\r\n      if (i === coord.i && j === coord.j) continue;\r\n      if (j < 0 || j >= 8) continue;\r\n      let aroundCoord = { i: i, j: j };\r\n      if (!_isEmptyCell(aroundCoord, board) && _isWhitePiece(aroundCoord, board) === against) continue;\r\n      if (board[i][j].piece === ((against) ? KIT.KING_BLACK : KIT.KING_WHITE)) res.push(aroundCoord)\r\n    }\r\n  }\r\n  return res.length ? res : false\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoords(piece, cellCoord, game) {\r\n  let possibleCoords = []\r\n  if (game.whiteTurn) {\r\n    switch (piece) {\r\n      case KIT.ROOK_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsRook(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.BISHOP_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsBishop(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.KNIGHT_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsKnight(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.PAWN_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsPawn(cellCoord, game.whiteTurn, game.gameBoard, game);\r\n        break;\r\n      case KIT.QUEEN_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsQueen(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.KING_WHITE:\r\n        possibleCoords = _getAllPossibleCoordsKing(cellCoord, game);\r\n        break;\r\n      default: return possibleCoords\r\n\r\n    }\r\n  } else {\r\n    switch (piece) {\r\n      case KIT.ROOK_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsRook(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.BISHOP_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsBishop(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.KNIGHT_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsKnight(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.PAWN_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsPawn(cellCoord, game.whiteTurn, game.gameBoard, game);\r\n        break;\r\n      case KIT.QUEEN_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsQueen(cellCoord, game.gameBoard, game.whiteTurn);\r\n        break;\r\n      case KIT.KING_BLACK:\r\n        possibleCoords = _getAllPossibleCoordsKing(cellCoord, game);\r\n        break;\r\n      default: return possibleCoords\r\n    }\r\n  }\r\n  return possibleCoords;\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsPawn(pieceCoord, against, board, game) {\r\n  let res = [];\r\n  let isWhite = board[pieceCoord.i][pieceCoord.j].piece === KIT.PAWN_WHITE\r\n  let diff = (isWhite) ? -1 : 1;\r\n  let nextCoord = { i: pieceCoord.i + diff, j: pieceCoord.j };\r\n  let diago1Coord = { i: pieceCoord.i + diff, j: pieceCoord.j + 1 }\r\n  let diago2Coord = { i: pieceCoord.i + diff, j: pieceCoord.j - 1 }\r\n  if (((diago1Coord.j < 8 && !_isEmptyCell(diago1Coord, board) && (_isWhitePiece(diago1Coord, board) !== against)) ||\r\n    _isEnPassant(diago1Coord, pieceCoord, against, isWhite, board, game)) && pieceCoord.j + 1 < 8)\r\n    res.push(diago1Coord)\r\n  if (((diago2Coord.j >= 0 && !_isEmptyCell(diago2Coord, board) && (_isWhitePiece(diago2Coord, board) !== against)) ||\r\n    _isEnPassant(diago2Coord, pieceCoord, against, isWhite, board, game)) && pieceCoord.j - 1 >= 0)\r\n    res.push(diago2Coord)\r\n  if (_isEmptyCell(nextCoord, board) && against === game.whiteTurn) res.push(nextCoord);\r\n  else return res;\r\n  if ((pieceCoord.i === 1 && !isWhite) || (pieceCoord.i === 6 && isWhite)) {\r\n    diff *= 2;\r\n    nextCoord = { i: pieceCoord.i + diff, j: pieceCoord.j };\r\n    if (_isEmptyCell(nextCoord, board)) res.push(nextCoord);\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction _isEnPassant(diagoCoord, pieceCoord, against, isWhite, board, game) {\r\n  if (game.blackPlayer.lastMove.fromCoord === null || diagoCoord.j > 7 || diagoCoord.j < 0) return false\r\n  return (_isEmptyCell(diagoCoord, board) &&\r\n    ((pieceCoord.i === 3 && isWhite) || (pieceCoord.i === 4 && !isWhite)) &&\r\n    (board[pieceCoord.i][diagoCoord.j].piece === (!against ? KIT.PAWN_WHITE : KIT.PAWN_BLACK)) &&\r\n    (isWhite ? (game.blackPlayer.lastMove.fromCoord.j === game.blackPlayer.lastMove.toCoord.j && Math.abs(game.blackPlayer.lastMove.fromCoord.i - game.blackPlayer.lastMove.toCoord.i) === 2) :\r\n      (game.whitePlayer.lastMove.fromCoord.j === game.whitePlayer.lastMove.toCoord.j && Math.abs(game.whitePlayer.lastMove.fromCoord.i - game.whitePlayer.lastMove.toCoord.i) === 2)) &&\r\n    ((pieceCoord.i === (isWhite ? game.blackPlayer.lastMove.toCoord.i : game.whitePlayer.lastMove.toCoord.i) &&\r\n      diagoCoord.j === (isWhite ? game.blackPlayer.lastMove.toCoord.j : game.whitePlayer.lastMove.toCoord.j))))\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsRook(pieceCoord, board, whiteTurn) {\r\n  let res = [];\r\n  for (let dir = 0; dir < 4; dir++) {\r\n    for (let i = _getDirection(dir, pieceCoord); (dir % 2 === 0) ? i >= 0 : i < 8; (dir % 2 === 0) ? i-- : i++) {\r\n      let coord = (dir < 2) ? { i, j: pieceCoord.j } : { i: pieceCoord.i, j: i };\r\n      if (!_isEmptyCell(coord, board)) {\r\n        if (_isWhitePiece(coord, board) === whiteTurn) break;\r\n        else {\r\n          res.push(coord);\r\n          break;\r\n        }\r\n      }\r\n      res.push(coord);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsBishop(pieceCoord, board, whiteTurn) {\r\n  let res = [];\r\n  for (let dir = 0; dir < 4; dir++) {\r\n    let i = pieceCoord.i + (dir < 2 ? -1 : 1);\r\n    for (let idx = pieceCoord.j + (dir % 2 === 0 ? 1 : -1); ((dir < 2) ? (i >= 0) : (i < 8)) && ((dir % 2 === 0) ? (idx < 8) : (idx >= 0)); (dir % 2 === 0) ? idx++ : idx--) {\r\n      let coord = { i: (dir < 2) ? i-- : i++, j: idx };\r\n      if (!_isEmptyCell(coord, board)) {\r\n        if (_isWhitePiece(coord, board) === whiteTurn) break;\r\n        else {\r\n          res.push(coord);\r\n          break;\r\n        }\r\n      }\r\n      res.push(coord);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction _getDirection(dir, pieceCoord) {\r\n  return ((dir < 2) ? pieceCoord.i : pieceCoord.j) + ((dir % 2 === 0) ? -1 : 1);\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsQueen(pieceCoord, board, whiteTurn) {\r\n  let diagonals = _getAllPossibleCoordsBishop(pieceCoord, board, whiteTurn)\r\n  return _getAllPossibleCoordsRook(pieceCoord, board, whiteTurn).concat(diagonals)\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsKnight(pieceCoord, board, whiteTurn) {\r\n  let res = [];\r\n  for (let i = pieceCoord.i - 2; i <= pieceCoord.i + 2; i++) {\r\n    if (i === pieceCoord.i) continue;\r\n    if (i < 0 || i >= 8) continue;\r\n    for (let j = pieceCoord.j - 2; j <= pieceCoord.j + 2; j++) {\r\n      if (i === pieceCoord.i && j === pieceCoord.j) continue;\r\n      if (j < 0 || j >= 8) continue;\r\n      let coord = { i: i, j: j };\r\n      if (!_isEmptyCell(coord, board) && _isWhitePiece(coord, board) === whiteTurn) continue;\r\n      if ((Math.abs(pieceCoord.i - i) + Math.abs(pieceCoord.j - j)) === 3) res.push(coord);\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction _getAllPossibleCoordsKing(pieceCoord, game) {\r\n  let res = [];\r\n  let board = game.gameBoard\r\n  for (let i = pieceCoord.i - 1; i <= pieceCoord.i + 1; i++) {\r\n    if (i < 0 || i >= 8) continue;\r\n    for (let j = pieceCoord.j - 1; j <= pieceCoord.j + 1; j++) {\r\n      if (i === pieceCoord.i && j === pieceCoord.j) continue;\r\n      if (j < 0 || j >= 8) continue;\r\n      let coord = { i: i, j: j };\r\n      if (!_isEmptyCell(coord, board) && _isWhitePiece(coord, board) === game.whiteTurn) continue;\r\n      if (_isCheck(coord, game.whiteTurn, game.gameBoard, game)) continue;\r\n      res.push(coord);\r\n      if ((j === 5 || j === 3) && (i === 0 || i === 7)) {\r\n        _getPossibleCasteling(game, coord, res)\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n\r\nfunction _getPossibleCasteling(game, coord, res) {\r\n  let board = game.gameBoard\r\n  if (game.whiteTurn && !game.whitePlayer.kingMoved) {\r\n    if (coord.j === 5 && _isEmptyCell({ i: coord.i, j: coord.j + 1 }, board) &&\r\n      !_isCheck({ i: coord.i, j: coord.j + 1 }, game.whiteTurn, board, game))\r\n      res.push({ i: coord.i, j: coord.j + 1 })\r\n    else if (_isEmptyCell({ i: coord.i, j: coord.j - 1 }, board) &&\r\n      !_isCheck({ i: coord.i, j: coord.j - 1 }, game.whiteTurn, board, game))\r\n      res.push({ i: coord.i, j: coord.j - 1 })\r\n  } else if (!game.whiteTurn && !game.whitePlayer.kingMoved) {\r\n    if (coord.j === 5 && _isEmptyCell({ i: coord.i, j: coord.j + 1 }, board) &&\r\n      !_isCheck({ i: coord.i, j: coord.j + 1 }, game.whiteTurn, board, game))\r\n      res.push({ i: coord.i, j: coord.j + 1 })\r\n    else if (_isEmptyCell({ i: coord.i, j: coord.j - 1 }, board) &&\r\n      !_isCheck({ i: coord.i, j: coord.j - 1 }, game.whiteTurn, board, game))\r\n      res.push({ i: coord.i, j: coord.j - 1 })\r\n  }\r\n}\r\n\r\n\r\nfunction _isEmptyCell(coord, board) {\r\n  return board[coord.i][coord.j].piece === ''\r\n}\r\n\r\n\r\nfunction _isWhitePiece(coord, board) {\r\n  return board[coord.i][coord.j].isWhite\r\n}\r\n\r\n\r\nfunction _isPawnAQueen(coord, piece) {\r\n  if (piece === KIT.PAWN_BLACK && coord.i === 7) return KIT.QUEEN_BLACK\r\n  else if (piece === KIT.PAWN_WHITE && coord.i === 0) return KIT.QUEEN_WHITE\r\n  else return piece\r\n}\r\n\r\n\r\nfunction _cleanBoard(board) {\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board.length; j++) {\r\n      if (board[i][j].isMarked) board[i][j].isMarked = false\r\n      if (board[i][j].isSelected) board[i][j].isSelected = false\r\n    }\r\n  }\r\n}","import io from 'socket.io-client'\r\nimport { httpService } from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\n\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// eslint-disable-next-line \r\nlet socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false })\r\n      // console.log(socket);\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb = null) {\r\n\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n// Basic Tests\r\n// function cb(x) { console.log('x:',x) }\r\n// socketService.on('baba', cb)\r\n// socketService.on('mama', cb)\r\n// socketService.on('lala', cb)\r\n// socketService.emit('baba', 'DATA')\r\n// socketService.off('baba', cb)\r\n\r\n\r\n","// import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseGame\r\n}\r\n\r\nwindow.userService = userService\r\n// Note: due to async, must run one by one...\r\n// userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 100, isAdmin: false})\r\n// userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 100, isAdmin: true})\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseGame(isWin = true, by = 1) {\r\n    const user = getLoggedinUser()\r\n    user.game_played = user.game_played + by || by\r\n    switch (isWin) {\r\n        case true:\r\n            user.win = user.win + by || by\r\n            break;\r\n        case false:\r\n            user.lose = user.lose + by || by\r\n            break;\r\n        case null:\r\n            user.draw = user.draw + by || by\r\n            break;\r\n        default:\r\n            console.log('nothing happend');\r\n    }\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    console.log(userCred)\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\n","import { userService } from '../../services/user-service'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function refresh(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getById(userId)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in refresh', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","// import { userService } from \"../services/user-service.js\"\r\nimport { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nimport {\r\n    login,\r\n    signup\r\n} from '../store/actions/userActions'\r\n\r\nexport const LoginModal = () => {\r\n    const [user, setUser] = useState({ username: '', password: '' })\r\n    const [registerUser, setRegisterUser] = useState({ username: '', password: '', firstName: '', lastName: '', email: '' })\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n\r\n    const doLogin = async ev => {\r\n        ev.preventDefault()\r\n        const { username, password } = user\r\n        if (!username) {\r\n            //   return this.setState({ msg: 'Please enter user/password' })\r\n            console.log('Please enter user/password')\r\n        }\r\n        const userCreds = { username, password }\r\n        try {\r\n            dispatch(login(userCreds))\r\n            setUser({ username: '', password: '' })\r\n            history.goBack();\r\n        } catch (err) {\r\n            //   this.setState({ msg: 'Login failed, try again.' })\r\n            console.log('Login failed, try again.')\r\n        }\r\n    }\r\n\r\n    const doRegister = async ev => {\r\n        ev.preventDefault()\r\n        const { username, password, firstName, lastName, email } = registerUser\r\n        if (!username || !password || !firstName || !lastName || !email) {\r\n            //   return this.setState({ msg: 'Please enter user/password' })\r\n            console.log('Please enter all fields')\r\n        }\r\n        const userCreds = { username, password, firstName, lastName, email }\r\n        try {\r\n            dispatch(signup(userCreds))\r\n            setRegisterUser({ username: '', password: '', firstName: '', lastName: '', email: '' })\r\n            history.goBack();\r\n        } catch (err) {\r\n            //   this.setState({ msg: 'Login failed, try again.' })\r\n            console.log('Login failed, try again.')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-modal flex column'>\r\n            <form className=\"flex column align-center\" onSubmit={doLogin}>\r\n                <img src=\"https://picsum.photos/300/300\" alt=\"Avatar\" />\r\n                <div className=\"form-inputs flex column w-75\">\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter username\"\r\n                            value={user.username}\r\n                            onChange={ev => setUser({ ...user, username: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">Username</label>\r\n                    </span>\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={user.password}\r\n                            onChange={ev => setUser({ ...user, password: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">Password</label>\r\n                    </span>\r\n                    <div className=\"flex space-around\">\r\n                        <button className=\"btn-login w-25 center\" type=\"submit\">Login</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <form className=\"flex column align-center w-100\" onSubmit={doRegister}>\r\n                <div className=\"form-inputs flex column w-75\">\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter username\"\r\n                            value={registerUser.username}\r\n                            onChange={ev => setRegisterUser({ ...registerUser, username: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">Username</label>\r\n                    </span>\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={registerUser.password}\r\n                            onChange={ev => setRegisterUser({ ...registerUser, password: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">Password</label>\r\n                    </span>\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter first name\"\r\n                            value={registerUser.name}\r\n                            onChange={ev => setRegisterUser({ ...registerUser, firstName: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">First name</label>\r\n                    </span>\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Last name\"\r\n                            value={registerUser.lastName}\r\n                            onChange={ev => setRegisterUser({ ...registerUser, lastName: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">Last name</label>\r\n                    </span>\r\n                    <span>\r\n                        <input className=\"slide-up\" id=\"card\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter e-mail adress\"\r\n                            value={registerUser.email}\r\n                            onChange={ev => setRegisterUser({ ...registerUser, email: ev.target.value })}\r\n                            required />\r\n                        <label htmlFor=\"card\">E-mail</label>\r\n                    </span>\r\n                    <div className=\"flex space-around\">\r\n                        <button className=\"btn-login w-25 center\" type=\"submit\">Register</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>)\r\n}","import { Home } from './pages/Home.jsx'\r\nimport { Gamerooms } from './pages/Gamerooms.jsx'\r\nimport { Gameroom } from './pages/Gameroom.jsx'\r\nimport { Member } from './pages/Member.jsx'\r\nimport { Login } from './pages/Login.jsx'\r\nimport { Admin } from './pages/Admin.jsx'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/gamerooms/',\r\n        component: Gamerooms\r\n    },\r\n    {\r\n        path: '/gamerooms/:roomId',\r\n        component: Gameroom\r\n    },\r\n    {\r\n        path: '/login/',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/Member/',\r\n        component: Member,\r\n    },\r\n    {\r\n        path: '/Admin/:userId',\r\n        component: Admin,\r\n    },\r\n    {\r\n        path: '/home',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n    \r\n]","import {BoardsPreview} from '../cmps/BoardsPreview.jsx'\r\nexport const Gamerooms = () => {\r\n  return (\r\n    <div>\r\n      <h1><strong>Lobby</strong></h1>\r\n\r\n      <BoardsPreview />\r\n      {/* <Board id={board._id} /> */}\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { boardsService } from \"../services/boards-service\"\r\nimport { boardService } from \"../services/board-service\"\r\nimport { socketService } from \"../services/socketService\";\r\n\r\n// import { GameData } from \"../cmps/GameData.jsx\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport {\r\n  refresh,\r\n} from '../store/actions/userActions'\r\n\r\nexport const Gameroom = () => {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const id = params.roomId\r\n  const [game, setGame] = useState(null);\r\n  const [board, setBoard] = useState([]);\r\n  let user = useSelector(state => state.userModule)\r\n\r\n\r\n  const fetchGame = async () => {\r\n    const fetchedBoards = await boardsService.getBoardById(id)\r\n    setGame(fetchedBoards)\r\n  }\r\n\r\n  const reset = () => {\r\n    fetchGame();\r\n  }\r\n\r\n  const onLeavingGame = async () => {\r\n    if (user.loggedInUser && (user.loggedInUser._id === game.whitePlayer.user._id || (game.blackPlayer.user && user.loggedInUser._id === game.blackPlayer.user._id))) {\r\n      await boardsService.deleteBoard(id)\r\n      socketService.emit('game-ended', true)\r\n      refresh(user.loggedInUser._id)\r\n      console.log('game deleted');\r\n    }\r\n    history.goBack();\r\n  }\r\n  useEffect(() => {\r\n    async function socketSetup() {\r\n      await socketService.setup();\r\n      socketService.emit('room-id', id);\r\n      socketService.on('update-board', updateSocketBoard);\r\n      socketService.on('game-ended', onEndGame)\r\n      socketService.emit('update-board', game);\r\n    }\r\n    socketSetup()\r\n  // eslint-disable-next-line\r\n  }, [id])\r\n\r\n  const updateSocketBoard = (game) => {\r\n    setGame(game);\r\n  };\r\n\r\n  const onEndGame = (bool) => {\r\n    console.log('end game')\r\n    refresh(user.loggedInUser._id)\r\n    bool && history.push('/gamerooms')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!game) return\r\n    const cellClicked = async (i, j) => {\r\n      if (user.loggedInUser) {\r\n        const _game = await boardService.cellClicked(i, j, game, user.loggedInUser._id);\r\n        if (_game && _game.whiteTurn !== game.whiteTurn) socketService.emit('update-board', _game)\r\n        _game && setGame({ ..._game });\r\n      }\r\n    }\r\n\r\n    const updateGameBoard = () => {\r\n      const mBoard = game.gameBoard\r\n      const _board = []\r\n      for (let i = 0; i < mBoard.length; i++) {\r\n        for (let j = 0; j < mBoard.length; j++) {\r\n          _board.push(\r\n            <div key={`${i}${j}`}\r\n              className={`cell ${(mBoard[i][j].isMarked && !mBoard[i][j].piece) ? 'hint' : ''} ${mBoard[i][j].isSelected ? 'selected' : ''}`}\r\n              onClick={() => cellClicked(i, j)}>\r\n              {mBoard[i][j].piece}\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n      setBoard(_board);\r\n    }\r\n    updateGameBoard();\r\n  }, [game, user.loggedInUser]);\r\n\r\n  if (!game) {\r\n    reset()\r\n    return <div>loading...</div>\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>GameRoom {id} <button className=\"leave-game-btn\" onClick={() => onLeavingGame()}>Leave Game</button></h1>\r\n\r\n      <section className=\"flex wrap justify-center\">\r\n        <div className=\"main-board flex column\">\r\n          <div className=\"opponent w-100\">\r\n            {(user.loggedInUser && game.blackPlayer.user) ?\r\n              ((user.loggedInUser._id === game.blackPlayer.user._id) ? game.whitePlayer.user.username : game.blackPlayer.user.username) :\r\n              'Pending for another player...'}\r\n          </div>\r\n          <div className={`board${(user.loggedInUser && game.blackPlayer.user && user.loggedInUser._id === game.blackPlayer.user._id) ? ' black-player' : ''}`}>\r\n            {board}\r\n          </div>\r\n          <div className=\"opponent w-100\">{(user.loggedInUser && game.blackPlayer.user && (user.loggedInUser._id === game.blackPlayer.user._id)) ? game.blackPlayer.user.username : game.whitePlayer.user.username}</div>\r\n        </div>\r\n        {/* Debbuging */}\r\n        {/* {game.blackPlayer.user ? <GameData game={game} /> : 'waiting for an opponent'} */}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import {LoginModal} from '../cmps/LoginModal.jsx'\r\n\r\nexport const Login = () => {\r\n  return (    \r\n      <LoginModal />\r\n  )\r\n}\r\n","import { useSelector } from 'react-redux';\r\n\r\nexport function Member() {\r\n  const { loggedInUser } = useSelector(state => state.userModule);\r\n  if (!loggedInUser) return <div> 404 page please login first </div>\r\n  let joined = new Date(loggedInUser.joined * 1000);\r\n  let active = new Date(loggedInUser.last_online * 1000);\r\n  return (\r\n    <div>\r\n      <h1 className=\"mb-4\"><strong>{loggedInUser.name} {loggedInUser.lastName} - Profile</strong></h1>\r\n      <ul className=\"flex space-around w-75 mb-4\">\r\n        <li className=\"flex column align-center user-info\"><p>{loggedInUser.followers.length}</p><p>followers</p></li>\r\n        <li className=\"flex column align-center user-info\"><p>{loggedInUser.game_played}</p><p>Total Game Played</p></li>\r\n        <li className=\"flex column align-center user-info green\"><p>{loggedInUser.win}</p><p>Wins</p></li>\r\n        <li className=\"flex column align-center user-info red\"><p>{loggedInUser.lose}</p><p>Loses</p></li>\r\n        <li className=\"flex column align-center user-info\"><p>{loggedInUser.draw}</p><p>Draws</p></li>\r\n        {/* <li className=\"flex column align-center user-info\"></li> */}\r\n      </ul>\r\n      <div className=\"user-info-extra\">\r\n        <p>Member since: {joined.toDateString()}</p>\r\n        <p>Active: {active.toDateString()}</p>\r\n        <h2 className=\"mb-4\">Game History</h2>\r\n        <ul className=\"flex wrap\">\r\n          {loggedInUser.game_history.map(gameNote => {\r\n            let time = new Date(gameNote.time * 1000)\r\n            return <li key={gameNote.gameNum} className='user-info history flex column space-between'>\r\n              <span className='winner'>Win: {gameNote.win}</span>\r\n              <span className='loser'>Lose: {gameNote.lose}</span>\r\n              <span className='date'>{time.toDateString()}</span>\r\n            </li>\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nexport function Admin() {\r\n  return (\r\n    <div>\r\n      <h1>Admin page!</h1>\r\n\r\n      <Link to='/cars'>Cars</Link>\r\n    </div>\r\n  )\r\n}\r\n","import { NavLink, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { logout } from '../store/actions/userActions';\r\n\r\nexport const Navbar = () => {\r\n    const { loggedInUser } = useSelector(state => state.userModule);\r\n    const dispach = useDispatch()\r\n    const history = useHistory()\r\n    const onLogout = () => {\r\n        history.push(`/`)\r\n        dispach(logout())\r\n    }\r\n    return (\r\n        <nav className=\"flex align-center\">\r\n            <ul className=\"flex align-center\">\r\n                <li><NavLink to='/home'>Home</NavLink></li>\r\n                <li><NavLink to='/gamerooms'>Games</NavLink></li>\r\n                <li>{!loggedInUser ?\r\n                    <NavLink to='/login'>Login</NavLink>\r\n                    :\r\n                    <NavLink to='/Member/'>{loggedInUser.username}</NavLink>\r\n                }</li>\r\n                {loggedInUser && <li><ExitToAppIcon className=\"icon\" onClick={()=> onLogout()} /></li>}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","// import React, {useState} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Navbar } from \"./Navbar.jsx\"\r\nexport const Header = () => {\r\n    // const [user, setUser] = useState(null)\r\n    function toggleMenu(el) {\r\n        console.log(el);\r\n    } \r\n    return (\r\n        <header className=\"main-header\">\r\n            <section className=\"header-container container flex main-header space-between align-center\">\r\n                <Link className=\"logo flex align-center\" to='/' >Chess</Link>\r\n                <Navbar />\r\n                <button className=\"menu-btn\" onClick={() => toggleMenu(this)}>☰</button>\r\n            </section>\r\n        </header>\r\n    )\r\n}","import { HashRouter as Router, Route } from 'react-router-dom'\nimport {routes} from './routes.js'\nimport './style/style.scss';\nimport { Header } from './cmps/Header.jsx';\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main>\n        {routes.map((route) => (\n          <Route key={route.path} exact component={route.component} path={route.path} />\n        ))}\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// if (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\nimport {userService} from '../../services/user-service.js'\r\n\r\nconst initialState = {\r\n  // loggedInUser: null,\r\n  loggedInUser: userService.getLoggedinUser(),\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.userId)\r\n      }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { userReducer } from './reducers/userReducer.js'\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    userModule: userReducer,\r\n})\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}